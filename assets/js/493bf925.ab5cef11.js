"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[465],{7580:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>f});var n=i(4848),o=i(8453);const s={},r=void 0,a={id:"definitions/Bit",title:"Bit",description:"Bit - A bit is a binary digit, which is the smallest unit of information. A bit may only occupy one of two states at a time. A bit can either be zero or one, low or high, off or on, false or true respectively.",source:"@site/docs/definitions/Bit.md",sourceDirName:"definitions",slug:"/definitions/Bit",permalink:"/docs/definitions/Bit",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"definitions",previous:{title:"Binary",permalink:"/docs/definitions/Binary"},next:{title:"Byte",permalink:"/docs/definitions/Byte"}},c={},f=[];function d(t){const e={a:"a",p:"p",strong:"strong",...(0,o.R)(),...t.components};return(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Bit"})," - A bit is a ",(0,n.jsx)(e.a,{href:"/docs/definitions/Binary",children:"binary"})," digit, which is the smallest unit of information. A bit may only occupy one of two states at a time. A bit can either be zero or one, low or high, off or on, false or true respectively."]})}function l(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},8453:(t,e,i)=>{i.d(e,{R:()=>r,x:()=>a});var n=i(6540);const o={},s=n.createContext(o);function r(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),n.createElement(s.Provider,{value:e},t.children)}}}]);