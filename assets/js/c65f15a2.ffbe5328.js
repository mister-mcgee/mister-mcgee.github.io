"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[958],{7986:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=t(4848),o=t(8453);const r={},a="Functions",i={id:"Resources/Python/Functions",title:"Functions",description:"Function - A function is a reusable block of code with inputs called parameters and an output called a return. In Python a function is defined using the keyword def, followed by its name and parameters in parentheses. A function is called by referencing its name followed by arguments in parentheses.",source:"@site/docs/Resources/Python/Functions.md",sourceDirName:"Resources/Python",slug:"/Resources/Python/Functions",permalink:"/docs/Resources/Python/Functions",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"resources",previous:{title:"Data Types",permalink:"/docs/Resources/Python/Data Types"},next:{title:"Operators",permalink:"/docs/Resources/Python/Operators"}},c={},l=[];function u(e){const n={code:"code",em:"em",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"functions",children:"Functions"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Function"})," - A function is a reusable block of code with inputs called ",(0,s.jsx)(n.strong,{children:"parameters"})," and an output called a ",(0,s.jsx)(n.strong,{children:"return"}),". In Python a function is ",(0,s.jsx)(n.em,{children:"defined"})," using the keyword ",(0,s.jsx)(n.code,{children:"def"}),", followed by its name and ",(0,s.jsx)(n.strong,{children:"parameters"})," in parentheses. A function is ",(0,s.jsx)(n.em,{children:"called"})," by referencing its name followed by ",(0,s.jsx)(n.strong,{children:"arguments"})," in parentheses."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# define the function named "hello" with the parameters "name" and "age"\ndef hello(name, age):\n\t# this function returns a string\n\treturn "Hello, my name is " + name + ", and I am " + str(age) + "years old!"\n\n# call the function named "hello" with the arguments "Gandalf" and "24000"\n# call the function named "print" using the output from "hello" as an argument\nprint( hello("Gandalf", 24000) )\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);