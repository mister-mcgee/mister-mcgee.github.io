"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8581],{5610:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"robotics0":[{"type":"link","label":"Syllabus","href":"/docs/Robotics & Mechatronics Pre-Introduction/Syllabus","docId":"Robotics & Mechatronics Pre-Introduction/Syllabus","unlisted":false}],"robotics1":[{"type":"link","label":"Syllabus","href":"/docs/Robotics & Mechatronics I/Syllabus","docId":"Robotics & Mechatronics I/Syllabus","unlisted":false}],"robotics2":[{"type":"link","label":"Syllabus","href":"/docs/Robotics & Mechatronics II/Syllabus","docId":"Robotics & Mechatronics II/Syllabus","unlisted":false}],"robotics3":[{"type":"link","label":"Syllabus","href":"/docs/Robotics & Mechatronics III/Syllabus","docId":"Robotics & Mechatronics III/Syllabus","unlisted":false}],"robotics4":[{"type":"link","label":"Syllabus","href":"/docs/Robotics & Mechatronics IV/Syllabus","docId":"Robotics & Mechatronics IV/Syllabus","unlisted":false}],"definitions":[]},"docs":{"definitions/Binary":{"id":"definitions/Binary","title":"Binary","description":"Binary - Binary comes from the Latin bini-, meaning having two parts. In programming, binary often refers to the base-2 number system which consists of only the digits zero and one."},"definitions/Bit":{"id":"definitions/Bit","title":"Bit","description":"Bit - A bit is a binary digit, which is the smallest unit of information. A bit may only occupy one of two states at a time. A bit can either be zero or one, low or high, off or on, false or true respectively."},"definitions/Byte":{"id":"definitions/Byte","title":"Byte","description":"Byte - A byte consists of eight bits and is the smallest addressable unit of memory in a modern computer."},"definitions/Concurrent":{"id":"definitions/Concurrent","title":"Concurrent","description":"Parallel / Concurrent - In programming, parallel refers to the processing of data simultaneously, meaning at the same time."},"definitions/CPU":{"id":"definitions/CPU","title":"CPU","description":"CPU - A CPU or central processing unit is hardware optimized to execute instructions in series"},"definitions/Decimal":{"id":"definitions/Decimal","title":"Decimal","description":"Decimal - Decimal comes from the Latin deci-, meaning tenth. Decimal refers to the base-10 number system which consists of the digits zero through nine."},"definitions/GPU":{"id":"definitions/GPU","title":"GPU","description":"GPU - A GPU or graphics processing unit is hardware optimized to execute instructions in parallel."},"definitions/Grammar":{"id":"definitions/Grammar","title":"Grammar","description":"Grammar - In programming, grammar refers to how the symbols of a programming language are arranged."},"definitions/Hardware":{"id":"definitions/Hardware","title":"Hardware","description":"Hardware - Hardware are the physical components that comprise a computer."},"definitions/HDD":{"id":"definitions/HDD","title":"HDD","description":"HDD - An HDD or hard disk drive is a kind of persistent storage device that stores information on a spinning disk using a magnetic head to  Because the disk has to be physically moved to read or write to certain locations, an HDD is not a form of random access storage."},"definitions/Hexadecimal":{"id":"definitions/Hexadecimal","title":"Hexadecimal","description":"Hexadecimal - Hexadecimal comes from the Latin hex- meaning six and deci- meaning tenth. Hexadecimal refers to the base-16 number system which consists of the numeric digits zero through 9 and an additional six alphabetic digits; A, B, C, D, E, F."},"definitions/Memory":{"id":"definitions/Memory","title":"Memory","description":"Memory - Memory is a term describing how computers store information, usually in the form of bits and bytes."},"definitions/Memory Address":{"id":"definitions/Memory Address","title":"Memory Address","description":"Memory Address - A memory address is a binary number (usually 32 bits wide or 64 bits wide), which describes the physical location of a chunk in memory. It is less efficient to address individual bits so a computer\'s memory is broken into chunks called bytes where each byte has its own address."},"definitions/Octal":{"id":"definitions/Octal","title":"Octal","description":"Octal - Octal comes from the Latin oct-, meaning eight. Octal refers to the base-8 number system which consists of the digits zero through seven."},"definitions/ODD":{"id":"definitions/ODD","title":"ODD","description":"ODD - An ODD or optical disk drive is a kind of persistent storage device that stores information on a spinning disk using a laser. Because the disk has to be physically moved to to read or write to certain locations, an ODD is not a form of random access storage."},"definitions/Parallel":{"id":"definitions/Parallel","title":"Parallel","description":"Parallel / Concurrent - In programming, parallel refers to the processing of data simultaneously, meaning at the same time."},"definitions/Persistent Storage":{"id":"definitions/Persistent Storage","title":"Persistent Storage","description":"Persistent Storage - Persistent storage is a kind of memory that does not require active power to store information, meaning that persistent memory can survive a power cycle. Persistent memory is usually slower to read than volatile memory."},"definitions/Program":{"id":"definitions/Program","title":"Program","description":"Program - A program is a sequence of instructions written to be executed by a computer."},"definitions/Programming Language":{"id":"definitions/Programming Language","title":"Programming Language","description":"Programming Language - A programming language is a set of grammar and syntax used to write programs."},"definitions/RAM":{"id":"definitions/RAM","title":"RAM","description":"RAM - RAM or random access memory is a kind of volatile memory that stores information via electric switches. Because there are no moving parts or magnetic switches, RAM is incredibly fast."},"definitions/Random Access":{"id":"definitions/Random Access","title":"Random Access","description":"Random Access - Random access means that read operations take the same time regardless of their location in memory."},"definitions/Read":{"id":"definitions/Read","title":"Read","description":"Read - In programming, reading refers to the process of copying a value from memory to the CPU."},"definitions/Serial":{"id":"definitions/Serial","title":"Serial","description":"Series / Serial - In programming, serial refers to the processing of data sequentially, meaning one at a time."},"definitions/Series":{"id":"definitions/Series","title":"Series","description":"Series / Serial - In programming, serial refers to the processing of data sequentially, meaning one at a time."},"definitions/Software":{"id":"definitions/Software","title":"Software","description":"Software - Software are the programs that a computer executes."},"definitions/SSD":{"id":"definitions/SSD","title":"SSD","description":"SSD - An SSD or solid state drive is a kind of persistent storage device that stores information via magnetic switches. Because there are no moving parts, an SSD is a form of random access storage."},"definitions/Syntax":{"id":"definitions/Syntax","title":"Syntax","description":"Syntax - In programming, syntax refers to the symbols that comprise a programming language. A syntax error occurs when a symbol is unrecognized or used incorrectly."},"definitions/Volatile Memory":{"id":"definitions/Volatile Memory","title":"Volatile Memory","description":"Volatile Memory - Volatile memory is a kind of memory that requires active power to store information, meaning that volatile memory cannot survive a power cycle. Volatile memory is typically faster to read than persistent storage."},"definitions/Write":{"id":"definitions/Write","title":"Write","description":"Write - In programming, writing refers to the process of copying a value from the CPU to memory."},"Robotics & Mechatronics I/Syllabus":{"id":"Robotics & Mechatronics I/Syllabus","title":"Syllabus","description":"Computer Science Foundations","sidebar":"robotics1"},"Robotics & Mechatronics II/Syllabus":{"id":"Robotics & Mechatronics II/Syllabus","title":"Syllabus","description":"Robotics & Automated Systems","sidebar":"robotics2"},"Robotics & Mechatronics III/Syllabus":{"id":"Robotics & Mechatronics III/Syllabus","title":"Syllabus","description":"DC/AC Electronics, Digital Electronics","sidebar":"robotics3"},"Robotics & Mechatronics IV/Syllabus":{"id":"Robotics & Mechatronics IV/Syllabus","title":"Syllabus","description":"Robotics & Mechatronics Technology","sidebar":"robotics4"},"Robotics & Mechatronics Pre-Introduction/Syllabus":{"id":"Robotics & Mechatronics Pre-Introduction/Syllabus","title":"Syllabus","description":"","sidebar":"robotics0"}}}')}}]);