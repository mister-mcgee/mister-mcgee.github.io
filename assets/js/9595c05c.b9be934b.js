"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3654],{2014:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>x,frontMatter:()=>d,metadata:()=>c,toc:()=>h});var t=s(4848),n=s(8453);const d={},i="Operators",c={id:"Resources/Python/Operators",title:"Operators",description:"Assignment Operator",source:"@site/docs/Resources/Python/Operators.md",sourceDirName:"Resources/Python",slug:"/Resources/Python/Operators",permalink:"/docs/Resources/Python/Operators",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"resources",previous:{title:"Functions",permalink:"/docs/Resources/Python/Functions"},next:{title:"Standard Input / Output",permalink:"/docs/Resources/Python/Standard Input & Output"}},l={},h=[{value:"Assignment Operator",id:"assignment-operator",level:3},{value:"Arithmetic Operators",id:"arithmetic-operators",level:3},{value:"Comparison Operators",id:"comparison-operators",level:3},{value:"Boolean Operators",id:"boolean-operators",level:3}];function o(e){const r={admonition:"admonition",code:"code",h1:"h1",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"operators",children:"Operators"}),"\n",(0,t.jsx)(r.h3,{id:"assignment-operator",children:"Assignment Operator"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Symbol"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Assignment"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"="})}),(0,t.jsx)(r.td,{children:"Assigns a value or the result of an expression to a variable."})]})})]}),"\n",(0,t.jsx)(r.h3,{id:"arithmetic-operators",children:"Arithmetic Operators"}),"\n",(0,t.jsx)(r.p,{children:"Unary Arithmetic Operators"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Symbol"}),(0,t.jsx)(r.th,{children:"Signature"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Positive"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"+"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"+ a"})}),(0,t.jsx)(r.td,{children:"Returns a numeric type with the sign unchanged."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Negative"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"-"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"- a"})}),(0,t.jsx)(r.td,{children:"Returns a numeric type with the sign inverted."})]})]})]}),"\n",(0,t.jsx)(r.p,{children:"Binary Arithmetic Operators"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Symbol"}),(0,t.jsx)(r.th,{children:"Signature"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Addition"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"+"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a + b"})}),(0,t.jsx)(r.td,{children:"Returns the sum of two numeric types."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Subtraction"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"-"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a - b"})}),(0,t.jsx)(r.td,{children:"Returns the difference of two numeric types."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Multiplication"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"*"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a * b"})}),(0,t.jsx)(r.td,{children:"Returns the product of two numeric types."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Exponentiation"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"**"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a ** b"})}),(0,t.jsx)(r.td,{children:"Returns the power of two numeric types."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Division"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"/"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a / b"})}),(0,t.jsx)(r.td,{children:"Returns the quotient of two numeric types."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Floor Division"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"//"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a // b"})}),(0,t.jsx)(r.td,{children:"Returns the integer quotient of two numeric types."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Remainder"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"%"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a % b"})}),(0,t.jsx)(r.td,{children:"Returns the integer remainder of two numeric types."})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"comparison-operators",children:"Comparison Operators"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Symbol"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Equal To"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"=="})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if two values are equal. Returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Not Equal To"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"!="})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if two values are NOT equal. Returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Less Than"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"<"})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if the left value is less than the right value. Returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Less Than OR Equal To"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"<="})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if the left value is less than or equal to the right value. Returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Greater Than"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:">"})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if the left value is greater than the right value. Returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Greater Than OR Equal To"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:">="})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if the left value is greater than or equal to the right value. Returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]})]})]}),"\n",(0,t.jsx)(r.admonition,{title:"A Note on Assignment and Equality",type:"warning",children:(0,t.jsxs)(r.p,{children:["A common pitfall when checking for equality ",(0,t.jsx)(r.code,{children:"=="})," is to accidentally use the assignment operator ",(0,t.jsx)(r.code,{children:"="}),". In some cases this will be interpreted without an error, but will result in undefined or unexpected behavior."]})}),"\n",(0,t.jsx)(r.h3,{id:"boolean-operators",children:"Boolean Operators"}),"\n",(0,t.jsxs)(r.p,{children:["Boolean operators are used to join ",(0,t.jsx)(r.strong,{children:"boolean"})," expressions and values."]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Symbol"}),(0,t.jsx)(r.th,{children:"Signature"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Boolean NOT"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"not"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"not a"})}),(0,t.jsxs)(r.td,{children:["Unary boolean operator. Returns ",(0,t.jsx)(r.code,{children:"True"})," if the right value is ",(0,t.jsx)(r.code,{children:"False"}),", returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Boolean AND"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"and"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a and b"})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if both the left and right values are ",(0,t.jsx)(r.code,{children:"True"}),", returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Boolean OR"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"or"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"a or b"})}),(0,t.jsxs)(r.td,{children:["Returns ",(0,t.jsx)(r.code,{children:"True"})," if either left or right value is ",(0,t.jsx)(r.code,{children:"True"}),", returns ",(0,t.jsx)(r.code,{children:"False"})," otherwise."]})]})]})]})]})}function x(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>c});var t=s(6540);const n={},d=t.createContext(n);function i(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);