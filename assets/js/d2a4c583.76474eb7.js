"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9097],{1654:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var o=r(4848),t=r(8453);const n={},c=void 0,i={id:"Resources/Glossary/Memory Address",title:"Memory Address",description:"Memory Address - A memory address is a binary number (usually 32 bits wide or 64 bits wide), which describes the physical location of a chunk in memory. It is less efficient to address individual bits so a computer's memory is broken into chunks called bytes where each byte has its own address.",source:"@site/docs/Resources/Glossary/Memory Address.md",sourceDirName:"Resources/Glossary",slug:"/Resources/Glossary/Memory Address",permalink:"/docs/Resources/Glossary/Memory Address",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"resources",previous:{title:"Hexadecimal",permalink:"/docs/Resources/Glossary/Hexadecimal"},next:{title:"Memory",permalink:"/docs/Resources/Glossary/Memory"}},a={},d=[];function l(e){const s={a:"a",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Memory Address"})," - A memory address is a ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Binary",children:"binary"})," number (usually 32 ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Bit",children:"bits"})," wide or 64 ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Bit",children:"bits"})," wide), which describes the physical location of a chunk in ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Memory",children:"memory"}),". It is less efficient to address individual ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Bit",children:"bits"})," so a computer's ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Memory",children:"memory"})," is broken into chunks called ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Byte",children:"bytes"})," where each ",(0,o.jsx)(s.a,{href:"/docs/Resources/Glossary/Byte",children:"byte"})," has its own address."]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>i});var o=r(6540);const t={},n=o.createContext(t);function c(e){const s=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(n.Provider,{value:s},e.children)}}}]);