"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8909],{2774:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var o=i(4848),n=i(8453);const r={},t=void 0,c={id:"Resources/Definitions/Memory Address",title:"Memory Address",description:"Memory Address - A memory address is a binary number (usually 32 bits wide or 64 bits wide), which describes the physical location of a chunk in memory. It is less efficient to address individual bits so a computer's memory is broken into chunks called bytes where each byte has its own address.",source:"@site/docs/Resources/Definitions/Memory Address.md",sourceDirName:"Resources/Definitions",slug:"/Resources/Definitions/Memory Address",permalink:"/docs/Resources/Definitions/Memory Address",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"directory",previous:{title:"Hexadecimal",permalink:"/docs/Resources/Definitions/Hexadecimal"},next:{title:"Memory",permalink:"/docs/Resources/Definitions/Memory"}},d={},a=[];function u(e){const s={a:"a",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Memory Address"})," - A memory address is a ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Binary",children:"binary"})," number (usually 32 ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Bit",children:"bits"})," wide or 64 ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Bit",children:"bits"})," wide), which describes the physical location of a chunk in ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Memory",children:"memory"}),". It is less efficient to address individual ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Bit",children:"bits"})," so a computer's ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Memory",children:"memory"})," is broken into chunks called ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Byte",children:"bytes"})," where each ",(0,o.jsx)(s.a,{href:"/docs/Resources/Definitions/Byte",children:"byte"})," has its own address."]})}function l(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>c});var o=i(6540);const n={},r=o.createContext(n);function t(e){const s=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),o.createElement(r.Provider,{value:s},e.children)}}}]);